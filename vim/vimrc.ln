""""""""""""""
" Vundle setup
""""""""""""""
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Plugin 'gmarik/vundle'

" My bundles
Plugin 'altercation/vim-colors-solarized'

Plugin 'ekalinin/Dockerfile.vim'
Plugin 'kchmck/vim-coffee-script'
Plugin 'pangloss/vim-javascript'
Plugin 'ajf/puppet-vim'
Plugin 'rosstimson/scala-vim-support'
Plugin 'fatih/vim-go'

Plugin 'mileszs/ack.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'ap/vim-css-color'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive.git'
Plugin 'tpope/vim-unimpaired'
Plugin 'bling/vim-airline'

""""""""""""""""
" Personal setup
""""""""""""""""
filetype plugin indent on
let mapleader = ","

" Tmp file settings
set viminfo='100,<50,s10,h,n~/.history/viminfo
set backupdir=~/.vim/tmp
set directory=~/.vim/tmp

" Color scheme
syntax enable
let g:solarized_termcolors=256
set background=light
colorscheme solarized

" Airline (for the status bar)
let g:airline_powerline_fonts=1

" General appearance
set nowrap
set number
set ruler
set laststatus=2
set encoding=utf-8
set cursorline
set showmatch
set list listchars=tab:▸\ ,trail:· " Show trailing whitespace

" Tabs and such
set shiftwidth=2
set tabstop=2
set expandtab
set smarttab
set autoindent
set wildmenu
set backspace=indent,eol,start

" Search
set hlsearch
set incsearch
set ignorecase
set smartcase
nmap <silent> <leader><space> :nohlsearch<CR>
set grepprg=ack
map <leader>a :Ack<space>
map <leader>f :CtrlP<CR>

" Ignore common stuff we don't care about
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*
set wildignore+=*/tmp/librarian/*,*/.vagrant/*,*/.kitchen/*,*/vendor/cookbooks/*
set wildignore+=*/tmp/cache/assets/*/sprockets/*,*/tmp/cache/assets/*/sass/*
set wildignore+=*.swp,*~,._*

let g:ctrlp_custom_ignore = {
  \ 'dir': 'build$\|\.git$\|\.svn$\|target$\|\.unpack$\|vendor$\|tmp/cache$\|ib\.xcodeproj$',
  \ 'file': 'ctags$\|\.DS_Store$\|\.gitignore$\|\.repl_history$',
  \ 'link': '',
  \ }

" Copy/paste
set clipboard=unnamed
map <leader>p :set paste!<CR>

" Filetype specific settings
autocmd filetype crontab setlocal nobackup nowritebackup
autocmd FileType make setlocal noexpandtab " Real tabs for makefiles
autocmd BufNewFile,BufRead *.json set ft=javascript
autocmd FileType python setlocal softtabstop=4 tabstop=4 shiftwidth=4

autocmd FileType go nmap <Leader>s <Plug>(go-implements)
autocmd FileType go nmap <Leader>i <Plug>(go-info)
autocmd FileType go nmap <Leader>d <Plug>(go-doc-vertical)
autocmd FileType go nmap <leader>r <Plug>(go-run)
autocmd FileType go nmap <leader>b <Plug>(go-build)
autocmd FileType go nmap <leader>t <Plug>(go-test)
autocmd FileType go nmap <leader>c <Plug>(go-coverage)
autocmd FileType go nmap <Leader>e <Plug>(go-rename)
autocmd FileType go setlocal listchars=tab:\ \ ,trail:·
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1

" Git mappings
nmap <leader>gb :Gblame<CR>
nmap <leader>gs :Gstatus<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>gl :Glog<CR>
nmap <leader>gc :Gcommit<CR>
nmap <leader>gp :Git push<CR>

" Random mappings
nmap <leader>u mQviwU`Q " Uppercase word
nmap <leader>l mQviwu`Q " Lowercase word
nmap <silent> <leader>ul :t.<CR>Vr= " Underline the current line with '='
map <Leader>= <C-w>= " Adjust viewports to the same size

" Stolen directly from Janus
if has("gui_macvim") && has("gui_running")
  " Map command-[ and command-] to indenting or outdenting
  " while keeping the original selection in visual mode
  vmap <D-]> >gv
  vmap <D-[> <gv

  nmap <D-]> >>
  nmap <D-[> <<

  omap <D-]> >>
  omap <D-[> <<

  imap <D-]> <Esc>>>i
  imap <D-[> <Esc><<i

  " Bubble single lines
  nmap <D-Up> [e
  nmap <D-Down> ]e
  nmap <D-k> [e
  nmap <D-j> ]e

  " Bubble multiple lines
  vmap <D-Up> [egv
  vmap <D-Down> ]egv
  vmap <D-k> [egv
  vmap <D-j> ]egv

  " Map Command-# to switch tabs
  map  <D-0> 0gt
  imap <D-0> <Esc>0gt
  map  <D-1> 1gt
  imap <D-1> <Esc>1gt
  map  <D-2> 2gt
  imap <D-2> <Esc>2gt
  map  <D-3> 3gt
  imap <D-3> <Esc>3gt
  map  <D-4> 4gt
  imap <D-4> <Esc>4gt
  map  <D-5> 5gt
  imap <D-5> <Esc>5gt
  map  <D-6> 6gt
  imap <D-6> <Esc>6gt
  map  <D-7> 7gt
  imap <D-7> <Esc>7gt
  map  <D-8> 8gt
  imap <D-8> <Esc>8gt
  map  <D-9> 9gt
  imap <D-9> <Esc>9gt
else
  " Map command-[ and command-] to indenting or outdenting
  " while keeping the original selection in visual mode
  vmap <A-]> >gv
  vmap <A-[> <gv

  nmap <A-]> >>
  nmap <A-[> <<

  omap <A-]> >>
  omap <A-[> <<

  imap <A-]> <Esc>>>i
  imap <A-[> <Esc><<i
 
  " Bubble single lines
  nmap <C-Up> [e
  nmap <C-Down> ]e
  nmap <C-k> [e
  nmap <C-j> ]e

  " Bubble multiple lines
  vmap <C-Up> [egv
  vmap <C-Down> ]egv
  vmap <C-k> [egv
  vmap <C-j> ]egv

  " Make shift-insert work like in Xterm
  map <S-Insert> <MiddleMouse>
  map! <S-Insert> <MiddleMouse>

  " Map Control-# to switch tabs
  map  <C-0> 0gt
  imap <C-0> <Esc>0gt
  map  <C-1> 1gt
  imap <C-1> <Esc>1gt
  map  <C-2> 2gt
  imap <C-2> <Esc>2gt
  map  <C-3> 3gt
  imap <C-3> <Esc>3gt
  map  <C-4> 4gt
  imap <C-4> <Esc>4gt
  map  <C-5> 5gt
  imap <C-5> <Esc>5gt
  map  <C-6> 6gt
  imap <C-6> <Esc>6gt
  map  <C-7> 7gt
  imap <C-7> <Esc>7gt
  map  <C-8> 8gt
  imap <C-8> <Esc>8gt
  map  <C-9> 9gt
  imap <C-9> <Esc>9gt
endif

